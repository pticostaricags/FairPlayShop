@using FairPlayShop.Interfaces.Services
@using FairPlayShop.Models.Store
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@attribute [Route(Common.Constants.ApiRoutes.CreateMyStore)]
@attribute [Authorize]
@rendermode RenderMode.InteractiveServer

<PageTitle>
    @Localizer![nameof(Common.Constants.ApiRoutes.CreateMyStore)].Value.Titleize()
</PageTitle>

<h3>
    @Localizer![nameof(Common.Constants.ApiRoutes.CreateMyStore)].Value.Titleize()
</h3>

<EditForm FormName="frmCreateMyStore" Model="this.CreateStoreModel" OnValidSubmit="OnValidSubmitAsync">
    <div class="mb-3">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
    </div>
    <div class="mb-3">
        <label class="mb-3">
            @Localizer![nameof(CreateStoreModel.Name)].Value.Titleize()
        </label>
        <InputText class="form-control" @bind-Value="CreateStoreModel!.Name"></InputText>
        <ValidationMessage For="@( () => CreateStoreModel.Name)"></ValidationMessage>
    </div>
    <div class="mb-3">
        <button class="btn btn-primary" type="submit">
            @Localizer["Save"]
        </button>
    </div>
</EditForm>

@code {
    [Inject]
    private IStoreService? StoreService { get; set; }
    [Inject]
    private IStringLocalizer<CreateMyStore>? Localizer { get; set; }
    [SupplyParameterFromForm]
    private CreateStoreModel? CreateStoreModel { get; set; } = new CreateStoreModel();

    private async Task OnValidSubmitAsync()
    {
        await this.StoreService!.CreateMyStoreAsync(this.CreateStoreModel!, CancellationToken.None);
    }
}
