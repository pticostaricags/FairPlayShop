@using FairPlayShop.Common.CustomAttributes
@using Microsoft.Extensions.Localization

@implements IDisposable

@inject NavigationManager NavigationManager


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">FairPlayShop</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill" aria-hidden="true"></span> @Localizer![HomeTextKey]
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Account/Manage">
                        <span class="bi bi-person-fill" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> @Localizer![LogoutTextKey]
                        </button>
                    </form>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Constants.ApiRoutes.CreateMyStore">
                        <span class="bi bi-arrow-bar-left" aria-hidden="true"></span> 
                        @Localizer![CreateMyStoreTextKey]
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Constants.ApiRoutes.MyStoreList">
                        <span class="bi bi-arrow-bar-left" aria-hidden="true"></span> 
                        @Localizer![MyStoreListTextKey]
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Account/Register">
                        <span class="bi bi-person" aria-hidden="true"></span> 
                        @Localizer![RegisterTextKey]
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/Account/Login">
                        <span class="bi bi-person-badge" aria-hidden="true"></span> 
                        @Localizer![LoginTextKey]
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
        <AuthorizeView Roles="@Common.Constants.RoleNames.SystemAdmin">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/SystemAdmin/ClaimsData">
                        <span class="bi bi-arrow-bar-left" aria-hidden="true"></span>
                        ClaimsData
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>
@code{
    [Inject]
    private IStringLocalizer<NavMenu>? Localizer {get;set;}
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }


    [ResourceKey(defaultValue: "Home")]
    public const string HomeTextKey = "HomeTextKey";
    [ResourceKey(defaultValue: "Logout")]
    public const string LogoutTextKey = "LogoutText";
    [ResourceKey(defaultValue: "Register")]
    public const string RegisterTextKey = "RegisterText";
    [ResourceKey(defaultValue: "Login")]
    public const string LoginTextKey = "LoginText";
    [ResourceKey(defaultValue: "Create My Store")]
    public const string CreateMyStoreTextKey = "CreateMyStore";
    [ResourceKey(defaultValue:"My Store List")]
    public const string MyStoreListTextKey = "MyStoreListText";
}